pipeline {

    environment {
      branchname =  env.BRANCH_NAME.toLowerCase()
      kubeconfig = getKubeconf(env.branchname)
      registryCredential = 'jenkins_registry'
      deployment1 = "${env.branchname == 'release-r2' ? 'sme-api-rc2' : 'sme-api' }"
      deployment2 = "${env.branchname == 'release-r2' ? 'sme-pedagogico-worker-r2' : 'sme-pedagogico-worker' }"      
      deployment3 = "${env.branchname == 'release-r2' ? 'sme-worker-fechamento-r2' : 'sme-worker-fechamento' }"  
      deployment4 = "${env.branchname == 'release-r2' ? 'sme-worker-geral-r2' : 'sme-worker-geral' }"
      deployment5 = "${env.branchname == 'release-r2' ? 'sme-worker-aee-r2' : 'sme-worker-aee' }"
      deployment6 = "${env.branchname == 'release-r2' ? 'sme-worker-aula-r2' : 'sme-worker-aula' }"
      deployment7 = "${env.branchname == 'release-r2' ? 'sme-worker-frequencia-r2' : 'sme-worker-frequencia' }"
      deployment8 = "${env.branchname == 'release-r2' ? 'sme-worker-institucional-r2' : 'sme-worker-institucional' }"
      deployment9 = "${env.branchname == 'release-r2' ? 'sme-worker-pendencias-r2' : 'sme-worker-pendencias' }"
      deployment10 = "${env.branchname == 'release-r2' ? 'sme-worker-avaliacao-r2' : 'sme-worker-avaliacao' }"
      deployment11 = "${env.branchname == 'release-r2' ? 'sme-worker-auditoria-r2' : 'sme-worker-auditoria' }"
      deployment12 = "${env.branchname == 'release-r2' ? 'sme-worker-notificacoes-r2' : 'sme-worker-notificacoes' }"
      deployment13 = "${env.branchname == 'release-r2' ? 'sme-worker-notificacoes-hub-r2' : 'sme-worker-notificacoes-hub' }"
    }
  
    agent { label 'SME-JENKINS-AGENT1' }

    options {
      disableConcurrentBuilds()
      skipDefaultCheckout()
    }
  
    stages {

      stage('Build') {
          parallel {
            stage('sme-sgp-backend') {
              agent { node { label 'builder' } }
              steps{
                checkout scm
                script {
                  imagename = "registry.sme.prefeitura.sp.gov.br/teste/sme-sgp-backend"
                  dockerImage = docker.build(imagename, "-f src/SME.SGP.Api/Dockerfile .")
                }
              }
            }
            stage('sme-worker-geral') {
              agent { node { label 'builder' } }
              steps{
                checkout scm
                script {
                  imagename = "registry.sme.prefeitura.sp.gov.br/teste/sme-worker-geral"
                  dockerImage = docker.build(imagename, "-f src/SME.SGP.Worker.Rabbbit/Dockerfile .")
                }
              }
            }
            stage('sme-worker-fechamento') {
              agent { node { label 'builder' } }
              steps{
                checkout scm
                script {
                  imagename = "registry.sme.prefeitura.sp.gov.br/teste/sme-worker-fechamento"
                  dockerImage = docker.build(imagename, "-f src/SME.SGP.Fechamento.Worker/Dockerfile .")
                }
              }
            }
            stage('sme-worker-aee') {
              agent { node { label 'builder' } }
              steps{
                checkout scm
                script {
                  imagename = "registry.sme.prefeitura.sp.gov.br/teste/sme-worker-aee"
                  dockerImage = docker.build(imagename, "-f src/SME.SGP.AEE.Worker/Dockerfile .")
                }
              }
            }
            stage('sme-worker-aula') {
              agent { node { label 'builder' } }
              steps{
                checkout scm
                script {
                  imagename = "registry.sme.prefeitura.sp.gov.br/teste/sme-worker-aula"
                  dockerImage = docker.build(imagename, "-f src/SME.SGP.Aula.Worker/Dockerfile .")
                }
              }
            }
            stage('sme-worker-frequencia') {
              agent { node { label 'builder' } }
              steps{
                checkout scm
                script {
                  imagename = "registry.sme.prefeitura.sp.gov.br/teste/sme-worker-frequencia"
                  dockerImage = docker.build(imagename, "-f src/SME.SGP.Frequencia.Worker/Dockerfile .")
                }
              }
            }
            stage('sme-worker-institucional') {
              agent { node { label 'builder' } }
              steps{
                checkout scm
                script {
                  imagename = "registry.sme.prefeitura.sp.gov.br/teste/sme-worker-institucional"
                  dockerImage = docker.build(imagename, "-f src/SME.SGP.Institucional.Worker/Dockerfile .")
                }
              }
            }
            stage('sme-worker-pendencias') {
              agent { node { label 'builder' } }
              steps{
                checkout scm
                script {
                  imagename = "registry.sme.prefeitura.sp.gov.br/teste/sme-worker-pendencias"
                  dockerImage = docker.build(imagename, "-f src/SME.SGP.Pendencias.Worker/Dockerfile .")
                }
              }
            }
            stage('sme-worker-avaliacao') {
              agent { node { label 'builder' } }
              steps{
                checkout scm
                script {
                  imagename = "registry.sme.prefeitura.sp.gov.br/teste/sme-worker-avaliacao"
                  dockerImage = docker.build(imagename, "-f src/SME.SGP.Avaliacao.Worker/Dockerfile .")
                }
              }
            }
            stage('sme-worker-auditoria') {
              agent { node { label 'builder' } }
              steps{
                checkout scm
                script {
                  imagename = "registry.sme.prefeitura.sp.gov.br/teste/sme-worker-auditoria"
                  dockerImage = docker.build(imagename, "-f src/SME.SGP.Auditoria.Worker/Dockerfile .")
                }
              }
            }
            stage('sme-worker-notificacoes') {
              agent { node { label 'builder' } }
              steps{
                checkout scm
                script {
                  imagename = "registry.sme.prefeitura.sp.gov.br/teste/sme-worker-notificacoes"
                  dockerImage = docker.build(imagename, "-f src/SME.SGP.Notificacoes.Worker/Dockerfile .")
                }
              }
            }
            stage('sme-worker-notificacoes-hub') {
              agent { node { label 'builder' } }
              steps{
                checkout scm
                script {
                  imagename = "registry.sme.prefeitura.sp.gov.br/teste/sme-worker-notificacoes-hub"
                  dockerImage = docker.build(imagename, "-f src/SME.SGP.Notificacoes.Hub/Dockerfile .")
                }
              }
            }
          }
    }
  }

    post {
      script {
        docker rmi $(docker images --filter "dangling=true" -q --no-trunc)
      }
  }
}

def getKubeconf(branchName) {
    if("main".equals(branchName)) { return "config_prd"; }
    else if ("master".equals(branchName)) { return "config_prd"; }
    else if ("homolog".equals(branchName)) { return "config_hom"; }
    else if ("release".equals(branchName)) { return "config_hom"; }
    else if ("release-r2".equals(branchName)) { return "config_hom"; }
    else if ("development".equals(branchName)) { return "config_dev"; }
    else if ("develop".equals(branchName)) { return "config_dev"; }
}
